@import "~@sparkpost/styles/src/assets/scss/shared/config";
@import "~@sparkpost/styles/src/assets/scss/shared/functions";

.spf-tree {
  .panel {
    margin-bottom: rem(9);
    border-bottom: none;
  }

  // Typography
  &__code {
    display: block;
    background: none;
    padding: 0 rem(33) 0 0;

    color: grayscale(3);
    white-space: normal;
    word-break: break-all;

    &--label {
      font-weight: 600;
      color: grayscale(2);
    }

    // Color Coding
    &--redirect { color: color(teal);    }
    &--include  { color: color(magenta); }
  }

  &__children {
    margin-left: rem(15);
  }

  &__child, &__root {
    display: block;
    transition: 0.15s;
  }

  &__root:hover {
    cursor: pointer;
    box-shadow: shadow(2);

    & > .spf-tree__chevron {
      color: color(blue);
    }
  }

  &__child {
    position: relative;

    &.can-expand:hover {
      cursor: pointer;
      box-shadow: shadow(2);

      & > .panel__body > .spf-tree__chevron {
        color: color(blue);
      }
    }

    // These are the little lines
    &:before, &:after {
      position: absolute;
      content: '';
      background: grayscale(7);
    }

    &:before {
      top: 50%;
      right: 100%;
      left: rem(-9);
      height: 1px;
    }

    &:after {
      top: rem(-9);
      bottom: 0;
      left: rem(-9);
      width: 1px;

      // To not overflow the vertical line on last children
      .spf-tree__childWrapper:last-child > & {
        bottom: 50%;
      }
    }

    // Color Coding
    &--redirect > .spf-tree__accent { background: color(teal);    }
    &--include  > .spf-tree__accent { background: color(magenta); }
  }

  // Can't have 3 pseudo elements, and border messes up margins so...
  &__accent {
    position: absolute;
    left: 0;
    top: 0;
    bottom: 0;
    width: 3px;
  }

  &__children {
    position: relative;

    // Yo this selector is crazy
    // This is the vertical line that connects two children together if there are children in between that are expanded
    .spf-tree__childWrapper:not(:last-child) > &:after {
      position: absolute;
      content: '';
      background: grayscale(7);

      top: rem(-10);
      bottom: 0;
      left: rem(-24);
      width: 1px;
    }
  }

  &__chevron {
    position: absolute;
    right: rem(18);
    top: 50%;
    transform: translate(0, -50%) rotate(180deg);
    transition: 0.15s;

    &.is-open {
      transform: translate(0, -50%);
    }
  }
}
